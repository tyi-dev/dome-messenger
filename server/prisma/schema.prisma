datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int       @id @unique @default(autoincrement())
  userName    String    @unique
  firstName   String    @map("first_name")
  lastName    String    @map("last_name")
  lastSeen    DateTime? @default(now())
  email       String    @unique
  phoneNumber String    @unique @map("phone_number")
  password    String

  conversations ConversationParticipant[]
  messages      Message[]
  messageStatus MessageStatus[]
}

model Conversation {
  id               Int              @id @default(autoincrement())
  title            String?
  conversationType ConversationType @default(P2P) @map("conversation_type")
  createdAt        DateTime         @default(now()) @map("created_at")
  updatedAt        DateTime         @updatedAt @map("updated_at")

  participants ConversationParticipant[]
  messages     Message[]
}

model ConversationParticipant {
  id             Int             @id @default(autoincrement())
  userId         Int             @map("user_id")
  conversationId Int             @map("conversation_id")
  joinedAt       DateTime        @default(now()) @map("joined_at")
  role           ParticipantRole @default(MEMBER)

  user         User         @relation(fields: [userId], references: [id])
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@unique([userId, conversationId])
}

model Message {
  id             Int       @id @default(autoincrement())
  content        String
  senderId       Int       @map("sender_id")
  conversationId Int       @map("conversation_id")
  createdAt      DateTime  @default(now()) @map("created_at")
  editedAt       DateTime? @map("edited_at")

  sender       User            @relation(fields: [senderId], references: [id])
  conversation Conversation    @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  status       MessageStatus[]
}

model MessageStatus {
  id        Int       @id @default(autoincrement())
  messageId Int       @map("message_id")
  userId    Int       @map("user_id")
  readAt    DateTime? @map("read_at")

  message Message @relation(fields: [messageId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id])

  @@unique([messageId, userId])
}

enum ParticipantRole {
  MEMBER
  ADMIN
  OWNER
}

enum ConversationType {
  P2P
  GROUP
  CHANNEL
}
